#include <iostream>
#include <string>
#include <vector>
#include <sstream> 
#include <fstream>
#include <cassert>
#include "SHA3.h"

using namespace std;

main()
{
  cout << "Run all tests: " << endl;
  size_t counter = 1;

  string test1_str = "01101";
  string test2_str = "01011";
  string test3_str = "10011";

  vector<string> test1_vec{test1_str, test2_str};
  vector<string> test2_vec{test1_str, test3_str};
  vector<string> test3_vec{test2_str, test3_str};

  assert(XOR(test1_vec) == "00110"); cout << "test: " << counter++ << endl;
  assert(XOR(test2_vec) == "11110"); cout << "test: " << counter++ << endl;
  assert(XOR(test3_vec) == "11000"); cout << "test: " << counter++ << endl;

  vector<char> test4_vec{'1', '0', '0', '0', '0'};
  vector<char> test5_vec{'1', '1' , '0'};
  vector<char> test6_vec{'1', '1', '1'};
  
  assert(XOR(test4_vec) == '1'); cout << "test: " << counter++ << endl;
  assert(XOR(test5_vec) == '0'); cout << "test: " << counter++ << endl;
  assert(XOR(test6_vec) == '1'); cout << "test: " << counter++ << endl;

  string test4_str = "0110101010011010101011111100001";
  vector<string> temp =  pad(test4_str);
  string test5_str = temp[0];
  for(const auto &i: temp){
    int pos = i.find(test4_str);
    assert(pos == 0); cout << "test: " << counter++ << endl;
    assert(i.size() == R); cout << "test: " << counter++ << endl;
  }

  size_t test1_int = 2;
  size_t test2_int = 5;
  size_t test3_int = 23;
  assert(getCoord(test1_int, test1_int, test2_int) == 773); cout << "test: " << counter++ << endl;
  assert(getCoord(test1_int, test2_int, test3_int) == 663); cout << "test: " << counter++ << endl;
  assert(getCoord(test2_int, test1_int, test3_int) == 151); cout << "test: " << counter++ << endl;

  vector<string> xo;
  string state(B, '0');
  string k(C, '0');
  xo.push_back(state);
  xo.push_back(test5_str+k);
  test5_str = XOR(xo);
  string cmp_test
  assert( theta(test5_str) == cmp_test); cout << "test: " << counter++ << endl;

  cout << "All tests passed!" << endl;

  return 0;
}